/*INDEX PAGE FOR GAME*/
@import url('https://fonts.googleapis.com/css2?family=Silkscreen&display=swap:800');

#index { background: hsl(520, 70%, 30%) }
#scores { background: hsl(294, 78%, 35%) }
#myscores { background: hsl(360, 97%, 30%) }
#game_page { background: hsla(306, 38%, 70%, 1) }
#presentation { background: hsla(206, 61%, 24%, 1)}
html { height: 100%; display: flex}
body { margin: auto;}

.presentation_container {
  display: flex;
  flex-flow: column nowrap;
  align-items: flex-end;
  font-family: 'Silkscreen', cursive;
  font-size: 35px;
  margin-left: 20px;
}

#names>p {
  text-align: right;
}
#presentationButton {
  align-self: center;
  font-size: 150px;
}

#presentation_table {
    width: 1020px;
}
#presentation_table>tbody {
  background-color: blueviolet;
  font-size: 40px;
}

.title {
  text-align: center;
  font-family: 'Silkscreen', cursive;
  font-weight: 800;
  font-size: calc(20vw / var(--word-total) );
  line-height: 1.0;
  letter-spacing: -0.03em;
  transform: perspective(300px) scaleY(1.5) rotateX(-40deg);
  transform-style: preserve-3d;
  --layer-depth: 0.32em;
}

.title .word {
  position: relative;
  display: inline-block;
  color: darkred;
  font-size: calc(((var(--line-index) + 1) * 25%) + 50%); /* We skew font-sizes to avoid emphasize on the top, due to perspective rotation */
  text-shadow: 0.06em 0 black, 0.06em 0.06em black, 0 0.06em black, -0.06em 0.06em black, -0.06em 0 black, -0.06em -0.06em black, 0 -0.06em black, 0.06em -0.06em black;
  transform-style: preserve-3d; /* Important as above, we need to make sure the pseudos share the same 3D space */
}

.title .word::before,
.title .word::after {
  content: attr(data-word);
  position: absolute;
  top: auto;
  left: 0;
  bottom: 0;
  display: block;
  pointer-events: none;
}

.title .word::before {
  color: darkred;
  text-shadow: 0.02em 0 black, 0.02em 0.02em black, 0 0.02em black, -0.02em 0.02em black, -0.02em 0 black, -0.02em -0.02em black, 0 -0.02em black, 0.02em -0.02em black;
  transform: translateZ(calc(var(--layer-depth) * -0.5));
}

.title .word::after {
  color: black;
  text-shadow: none;
  transform: translateZ(calc(var(--layer-depth) * -1));
}

.title {
  --min-font-size: 90;
  --max-font-size: 160;
  font-size: calc(var(--min-font-size) * 1px);
}

@media screen and (min-width: 320px) {
  .title {
    font-size: calc(var(--min-font-size) * 1px + (var(--max-font-size) - var(--min-font-size)) * ((100vw - 320px) / 680));
  }
}

@media screen and (min-width: 1000px) {
  .title {
    font-size: calc(var(--max-font-size) * 1px);
  }
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 80px;
  font-family: 'Silkscreen', cursive;
}

.inactive {
  display: none;
}

.btn {
  transition-duration: 0.4s;
  background-color: black;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 26px;
  font-family: 'Silkscreen', cursive;
  font-weight: 800;
  width: 200px;
  height: 80px;
}

.btn:hover {
  background-color: darkred;
  color: white;
}

#name {
  font-family: 'Silkscreen', cursive;
  font-size: 34px;
  text-align: center;
}

input:focus::placeholder {
  color: transparent;
}

#username {
  font-family: 'Silkscreen', cursive;
  font-size: 34px;
  text-align: center;
  background-color: white;
  color: black;
  margin: 0;
}

.link {
  font-size: 35px;
  color: white;
  text-decoration-color: white;
}

a:link {
  text-decoration: none;
  color: white
}
a:visited {
  text-decoration: none;
  color: white
}
a:hover {
  text-decoration: none;
  color: white;
  background-color: black;
}
a:active {
  text-decoration: none;
  color: white
}

/*SCORE PAGE*/

.title .word {
  position: relative;
  display: inline-block;
  color: darkred;
  font-size: calc(((var(--line-index) + 1) * 25%) + 50%); /* We skew font-sizes to avoid emphasize on the top, due to perspective rotation */
  text-shadow: 0.06em 0 black, 0.06em 0.06em black, 0 0.06em black, -0.06em 0.06em black, -0.06em 0 black, -0.06em -0.06em black, 0 -0.06em black, 0.06em -0.06em black;
  transform-style: preserve-3d; /* Important as above, we need to make sure the pseudos share the same 3D space */
}

#high_scores, #my_scores {
  padding-bottom: 0.2em;
}

.table {
  font-size: 30px;
  text-align: left;
  border-collapse: collapse;
  table-layout: fixed;
  width: 720px;
}

table>thead {
  border-bottom: 5px solid black;
}

table>tbody:last-child {
   border-bottom: 5px solid black;
}

table>tbody {
  background-color: hsl(294, 78%, 46%);
}

table#scores_table>tbody:nth-child(2) {
  animation: blinker 3s linear infinite;
}

@keyframes blinker {
  50% {
    background-color: hsl(294, 78%, 36%)
  }
}

td {
  border-left: 5px dashed black;
  border-right: 5px dashed black;
  border-bottom:  5px dashed black;
  height: 65px;
}

.container.btns {
  flex-direction: row;
  justify-content: space-between;
  align-content: flex-end;
  padding-top: 2em;
}

.container.btns.nouser {
  flex-direction: row;
  justify-content: center;
  padding-top: 2em;
}

/*MY SCORES PAGE*/

#my_scores.title .word {
  position: relative;
  display: inline-block;
  color: papayawhip;
  font-size: calc(((var(--line-index) + 1) * 25%) + 50%); /* We skew font-sizes to avoid emphasize on the top, due to perspective rotation */
  text-shadow: 0.06em 0 black, 0.06em 0.06em black, 0 0.06em black, -0.06em 0.06em black, -0.06em 0 black, -0.06em -0.06em black, 0 -0.06em black, 0.06em -0.06em black;
  transform-style: preserve-3d; /* Important as above, we need to make sure the pseudos share the same 3D space */
}


#my_scores.title .word::before {
  color: papayawhip;
  text-shadow: 0.02em 0 black, 0.02em 0.02em black, 0 0.02em black, -0.02em 0.02em black, -0.02em 0 black, -0.02em -0.02em black, 0 -0.02em black, 0.02em -0.02em black;
  transform: translateZ(calc(var(--layer-depth) * -0.5));
}

#my_score_container.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 80px;
  font-family: 'Silkscreen', cursive;
  color: white
}


.table {
  font-size: 30px;
  text-align: left;
  border-collapse: collapse;
  table-layout: fixed;
  width: 720px;
}

table#my_scores_table>thead {
  border-bottom: 5px solid white;
}

table#my_scores_table>tbody:last-child {
   border-bottom: 5px solid white;
}

table#my_scores_table>tbody {
  background-color: hsla(160, 91%, 24%, 1);
}

table#my_scores_table>tbody:nth-child(2) {
  animation: blinking 3s linear infinite;
}

@keyframes blinking{
  50% {
    background-color: hsla(160, 91%, 33%, 1)
  }
}

table#my_scores_table>tbody>tr>td {
  border-left: 5px dashed white;
  border-right: 5px dashed white;
  border-bottom:  5px dashed white;
  height: 65px;
}


/*GAME STYLE*/

#score {
  width: 50px;
  height: 50px;
  font-size: 40px;
  background-color: transparent;
}


#life { text-align: center;
  width: 50px;
  height: 50px;
  font-size: 40px;
  background-color: transparent;}

#score_text{ text-align: center;
  width: 100px;
  height: 50px;
  font-size: 40px;
  background-color: transparent}

#life_text{ text-align: center;
  width: 100px;
  height: 50px;
  font-size: 40px;
  background-color: transparent}

#hud {
  font-family: 'Silkscreen', cursive;
  z-index: 13;
  position: absolute;
  bottom: 100px;
}

#hud2 {
  font-family: 'Silkscreen', cursive;
  z-index: 13;
  position: absolute;
  bottom: 0px;
}


#game {
  width: 100%;
  height: 100vh;
  margin: 0;
  position: absolute;
  background-size: cover;
}

#dino {
  z-index: 11;
  height: 400px;
  width: 400px;
  left: 50px;
  top: 620px;
  position: relative;
  background-image: url("/static/images/freedinosprite/png/Run (1).png");
  background-size: cover;
}

#rock {
  z-index: 10;
  width: 300px;
  height: 300px;
  position: relative;
  top: 310px;
  left: 2000px;
  background-image: url("/static/images/rock.png");
  background-size: cover;
  animation: rock 2s linear;
}

#meat {
  z-index: 10;
  width: 150px;
  height: 125px;
  position: relative;
  top: 500px;
  left: 1850px;
  display: flex;
  background-image: url("/static/images/Pork-Steak-clipart-transparent.png");
  background-size: cover;
  animation: meat 2.0s linear;
}


@keyframes rock {
  0%{left: 1900px;}
  100%{left: -50px;}
}

@keyframes meat {
  0%{left: 1850px;}
  100%{left: -50px;}
}

.jump-animation {
  animation: jump 2.5s;
}

@keyframes jump {
  0%,
  100% {transform: translateY(-1px);}
  50% {transform: translateY(-2px);}
  25% {transform: translateY(-400px)}
}

.center {
  margin-left: auto;
  margin-right: auto;
  font-size: 25px
}

.move-right-animation {
  /*bottom: 15%;*/
  position: relative;
  -webkit-animation: linear infinite;
  -webkit-animation-name: run_right;
  -webkit-animation-duration: 1s;
}
@-webkit-keyframes run_right {
  0% {
    left: 0;
  }
  100% {
    left: 100px;
  }
}

#moon {
  z-index: 1;
  height: 100vh;
  width: 100%;
  background-size: cover;
  position: absolute;
  background-image: url("/static/images/bacgound_layers/moon.png");
}

#stars {
  top: -60px;
  left: 80px;
  z-index: 2;
  height: 100vh;
  width: 100%;
  background-size: cover;
  position: absolute;
  background-image: url("/static/images/bacgound_layers/stars.png");
}

#trees_far {
  z-index: 3;
  height: 100vh;
  width: 100%;
  top: 1rem;
  position: absolute;
  background-size: cover;
  background-image: url("/static/images/bacgound_layers/trees_far.png");
  background-repeat: repeat-x;
  animation: far linear 9000s, infinite;
}


#trees_close {
  z-index: 4;
  height: 100vh;
  width: 100%;
  position: absolute;
  background-size: cover;
  background-image: url("/static/images/bacgound_layers/trees_close.png");
  background-repeat: repeat-x;
  animation: tree linear 9000s, infinite;
}


#grass {
  z-index: 6;
  height: 100vh;
  width: 100%;
  position: absolute;
  bottom: 15rem;
  background-size: auto;
  background-image: url("/static/images/bacgound_layers/grass.png");
  animation: grass linear 9000s, infinite;
}

#ground {
  z-index: 5;
  height: 100vh;
  width: 100%;
  position: absolute;
  top: 3rem;
  background-size: cover;
  background-image: url("/static/images/bacgound_layers/ground.png");
  animation: close linear 9000s, infinite;
}

@keyframes close {
  from {
    background-position: 3000000px
  }
  to {
    background-position: 1px
  }
}

@keyframes grass {
  from {
    background-position: 700000px
  }
  to {
    background-position: 1px
  }
}

@keyframes tree {
  from {
    background-position: 500000px
  }
  to {
    background-position: 1px
  }
}

@keyframes far {
  from {
    background-position: 300000px
  }
  to {
    background-position: 1px
  }
}


#root {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

#container {
    position: relative;
    overflow: hidden;
    left: 0px;
    top: 0px;
}

#content {
    position: absolute;
}
